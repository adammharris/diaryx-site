---
import "./DiaryxLayout.css";
const { frontmatter, trimFirstHeading = false } = Astro.props;

const formatFrontmatterValue = (value: unknown) => {
  if (value instanceof Date) {
    return value.toISOString().split("T")[0];
  }

  if (Array.isArray(value)) {
    return value.map((item) => String(item)).join("\n");
  }

  if (typeof value === "object" && value !== null) {
    return JSON.stringify(value, null, 2);
  }

  return String(value ?? "");
};

const formatSummaryValue = (value: unknown) => {
  if (value instanceof Date) {
    return value.toLocaleDateString(undefined, {
      year: "numeric",
      month: "short",
      day: "numeric",
    });
  }

  if (Array.isArray(value)) {
    return value.map((item) => String(item)).join(", ");
  }

  return String(value ?? "");
};

const truncate = (str: string, maxLength: number) => {
  if (str.length <= maxLength) return str;
  return str.slice(0, maxLength) + "...";
};

const frontmatterRecord = frontmatter as Record<string, unknown>;

// Get key summary fields
const title = frontmatterRecord.title ? String(frontmatterRecord.title) : null;
const author = frontmatterRecord.author
  ? String(frontmatterRecord.author)
  : null;
const audience = frontmatterRecord.audience
  ? formatSummaryValue(frontmatterRecord.audience)
  : null;

// Create compact summary line for pill
const pillParts = [
  title ? truncate(title, 30) : null,
  author ? truncate(author, 20) : null,
  audience ? truncate(audience, 25) : null,
].filter(Boolean);

const pillSummary = pillParts.join(" â€¢ ");

// Get all frontmatter entries for expanded view
const allEntries = Object.entries(frontmatterRecord).map(([key, value]) => ({
  key,
  value: formatFrontmatterValue(value),
}));

const contentClass = `content-body${trimFirstHeading ? " trim-heading" : ""}`;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>{frontmatter.title}</title>
    <meta
      name="description"
      content={frontmatter.description || frontmatter.title}
    />
  </head>
  <body>
    <div class="page-container">
      <main id="main-content">
        <article class={contentClass}>
          <slot />
        </article>
      </main>

      <!-- Floating metadata pill -->
      <div
        class="metadata-pill"
        role="complementary"
        aria-label="Document metadata"
      >
        <div class="pill-collapsed">
          <span class="pill-icon" aria-hidden="true">ðŸ“„</span>
          <span class="pill-text">{pillSummary}</span>
        </div>
        <div class="pill-expanded">
          <div class="pill-header">
            <span class="pill-header-label">Document Info</span>
          </div>
          <div class="pill-content">
            <dl>
              {
                allEntries.map(({ key, value }) => (
                  <div class="pill-row">
                    <dt>{key}</dt>
                    <dd>{value}</dd>
                  </div>
                ))
              }
            </dl>
          </div>
        </div>
      </div>
    </div>

    <script>
      // Handle touch devices - tap to toggle pill expansion
      if ("ontouchstart" in window) {
        const pill = document.querySelector(".metadata-pill");
        if (pill) {
          pill.addEventListener("click", function (e) {
            e.stopPropagation();
            this.classList.toggle("is-active");
          });

          // Close pill when tapping outside
          document.addEventListener("click", function () {
            pill.classList.remove("is-active");
          });
        }
      }
    </script>
  </body>
</html>
